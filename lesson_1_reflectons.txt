How did viewing a diff between two versions of a file help you see the bug that was introduced?

It shows the comparison between two files at different points in time. It shows which parts should be correct and which parts are wrong.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

It shows your steps and how your developed your program piece by piece. It shows progress.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?

Pros: more clear organization of steps and logical changes.
Cons: Have to worry about saving; sometimes forget to save (might lose work)

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?

Git makes sure that all files related to each other are updated. Provides more versatility and organization of files.

How can you use the commands git log and git diff to view the history of files?

Use git log to show all the commits (history) and git diff to compare two versions of a repository at different points in time.

How might using version control make you more confident to make changes that could break something?

You could always go back to a previous version if you made a mistake.

Now that you have your workspace set up, what do you want to try using Git for?

To have a safe and convenient way to store versions of my code when developing a program.