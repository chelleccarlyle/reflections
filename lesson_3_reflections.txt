When would you want to use a remote repository rather than keeping all your work local?

If you want to collaborate with other people, and work on the same project. Gather and share code with other people.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

There might be commits in GitHub that you don’t want personally. For example, one commit can be from another user, and you don’t want that because it is code for a different version of a program.

Describe the differences between forks, clones, and branches. When would you use one instead of another?

Forks are good for getting a copy of another user directly in Github (good for collaboration). Clone is good for making copies locally or from Github to local computer. Branches are good to make different versions of a program.

What is the benefit of having a copy of the last known state of the remote stored locally?

It allows the user to make commits and changes locally while combining changes from Github via remote and merging them without creating conflict and/or deleting opposite commits and changes. It also keeps track what is more up to date via local and GitHub.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

I don’t know, that would be hard. It will be easier because you can transfer files via usb or hard drive. But doing it online is more harder. And providing organization would be harder as well. Also, messaging would be the same because you can just chat online.

When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

To make sure that the original program or final program does not get modified or broken. It just provides a way of keeping track of different versions from different users/collaborators. It’s a more fail-proof way of updating and making changes to a program when working with other people.