What happens when you initialize a repository? Why do you need to do it?

Creates a metadata of git, which tracks all the files and their history.

How is the staging area different from the working directory and the repository? What value do you think it offers?

It shows which files exactly are to be added to a repository/commit. 

How can you use the staging area to make sure you have one commit per logical change?

If there is only one file per staging area, or the difference between working directory and staging area represents one logical change. Only put files that represent one logical change from the previous commit.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

For experimenting different versions of your program. Doing testing instead of changing the original/official state of the program.

How do the diagrams help you visualize the branch structure?

Show how they are related by showing commits that are in different branches or whether or not it does not belong to a branch (detached head). They are reachable by their parent.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

A commit that contains commits of both branches. It combines the commits of both branches into one based on the origin branch.

What are the pros and cons of Git’s automatic merging vs. always doing merges manually?

Git’s automatic can figure out which lines of code to delete and add to the updated program. Manual merging is good for more complicated updates, specifically when two people have two versions of the same area of code. (more complicated); allows users to decide which to include and not